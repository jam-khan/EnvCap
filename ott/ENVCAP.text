<program> ::= <expression>
			    |   <module>
          |   <header>

    
<module> ::= "module " ( <identifier> ) "(" ( <param> )* ( "," <param> )* ")" ":" ( <param> ) "= {\n" <program> "\n}"
 
<header>  ::= "type" (<identifier>) "=" (<record_type>) ";"
               | "signature" (<identifier>) "(" (<param>) ")" ":=" (<type>) ";"
               
<expression> ::=  "?"
				        | "void"
               	| <basic_expr>
             	  | <lambda_expr>
                | <expression> "." ( <identifier> )
                | <expression> "." ( [0-9] )+
                | <record>
                | <application>
                | <merge>
                | <box_env>
                | <conditional>
                | "let" <var_assignment> "in" <expression>
                | "letrec" <var_assignment> "in" <expression>
                | <tuple>
                | "Fst" <tuple>
                | "Snd" <tuple>
              	| <list>
                | <parens_expr> <binop> <parens_expr>
                | <unaryop> <parens_expr>
                | <expression> ";" <expression>

<lambda_expr>   ::= "\\(" ( <param> )* ")=>" "{" <program> "}"
<record>        ::= "{" <single_record> ( "," <single_record> )* "}"
<single_record> ::= "{" <identifier> ":" <expression> "}"
<merge>         ::= <expression> ( ",," <expression> )+
<conditional>   ::= "if" <expression> "then" <expression> "else" <expression>
<box_env>       ::= "Box" "(" <expression> "," <expression> ")"

<parens_expr> ::= <expression> | "(" <expression> ")"

<binop> 	    ::= "+" | "-" | "*" | "/" | "%" | ">" | ">=" | "==" | "!=" | "<" | "<=" | "&&" | "||"
<unaryop>	    ::= "!"

<list> ::= "[]"
          | "[" <expression> ( "," <expression> )* "]"

<application> ::= <identifier> "(" ( <expression> ) ( "," <expression> )* ")"
<tuple> ::= "(" <basic_expr> ( "," <basic_expr> )* ")"
<basic_expr> ::=  <integer>
				| <string>
                | <boolean>

<var_assignment> ::= <identifier> "=" <expression>
                
<param>   ::= <identifier> ":" <type>

<integer> ::= ( <sign> )* [0-9]+
<sign>	  ::= "+" | "-"

<string> ::= "\"" [a-z]* "\""
<boolean> ::= "False" | "True"

<type> ::= <base_type>
		|  <intersection_type>
        |  <arrow_type>
        |  <record_type>
        |  "(" <type> ")"

<base_type> ::= "Int"
			|	"Bool"
			|	"String"

<intersection_type> ::= "(" <type> "," <type> ")"
<arrow_type>		::= "(" <type> "->" <type> ")"
<record_type>		::= "{" <identifier> ":" <type> "}"

<identifier>		::= ([a-z])+ ([0-9] [a-z])*