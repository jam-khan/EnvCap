@pure module QuickSort

require Listutils;

function quickSort(ls: [Int]) : [Int] {
    match ls of
        case []         => { []<Int> }
        case (pivot:xs) => {
            let {
                smaller: [Int] = filter(\(x: Int) => { x <= pivot }, xs);
                larger: [Int] = filter(\(x: Int) => { x > pivot }, xs)
            } in {
                concat(quickSort(smaller), concat([pivot]<Int>, quickSort(larger)))
            }
        }
}