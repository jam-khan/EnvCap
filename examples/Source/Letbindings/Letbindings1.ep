type UTIL = {factorial: (Int -> Int), result: Int};

let {   
    one : Sig[Int, UTIL] = 
        struct (x: Int) {
            function factorial(n:Int) : Int { 
                    if (n == 0) 
                        then { 1 }
                        else { n * factorial(n - 1) } 
            };
            val result = factorial(x)
        };
    instance : UTIL = one(2) 
    }
    in { instance.result }
