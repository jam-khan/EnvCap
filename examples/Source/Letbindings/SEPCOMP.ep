@pure

interface N { val x : Int };

module n : N {
    let x = 3
};

interface M {
    val f : Int -> Int;
    val m : Int
};

functor m (n : N) : M {
    open n;
    let f = \(y: Int) => {y + x};
    let m = f(x) 
};

(* linking is simply: module application *)
m(n)
(* this can not be represented in Cardelli's bindings *)
