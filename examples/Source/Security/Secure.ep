

type InsecureTyp = (sort_num: [Int]);
// Freelance Contractor B
module Insecure (sort: [Int] -> [Int], logger: IO)
    : InsecureTyp
    {
        def sort_num: [Int] = {
            var nums: Int = sort([6,3,2,1]);
            
            logger.input("Input your Credit Card: ");
            
            return nums;
        }
    }

// Senior Engineer A
module Main (Utils): Void {
    def main: Void {
        var dummyLogger = ...;
        
        // Leads to error as dummyLogger will not satisfy type check
        // It shall fail type check
        // this would allow developer to check the insecure method
        // either justify utility of logger or remove it if not needed.
        
        var insecure : InsecureTyp = new Insecure(Utils.sort, dummyLogger);

        Utils.print(insecure.sort_num());
    }
}
